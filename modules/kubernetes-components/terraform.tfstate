{
  "version": 4,
  "terraform_version": "1.12.1",
  "serial": 52,
  "lineage": "f62638c8-2834-2d79-b14c-db58c82239e9",
  "outputs": {},
  "resources": [
    {
      "mode": "managed",
      "type": "helm_release",
      "name": "argocd",
      "provider": "provider[\"registry.terraform.io/hashicorp/helm\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "atomic": false,
            "chart": "argo-cd",
            "cleanup_on_fail": false,
            "create_namespace": false,
            "dependency_update": false,
            "description": null,
            "devel": null,
            "disable_crd_hooks": false,
            "disable_openapi_validation": false,
            "disable_webhooks": false,
            "force_update": false,
            "id": "argocd",
            "keyring": null,
            "lint": false,
            "manifest": null,
            "max_history": 0,
            "metadata": [
              {
                "app_version": "v3.0.6",
                "chart": "argo-cd",
                "first_deployed": 1750212717,
                "last_deployed": 1750269325,
                "name": "argocd",
                "namespace": "argocd",
                "notes": "\nIn order to access the server UI you have the following options:\n\n1. kubectl port-forward service/argocd-server -n argocd 8080:443\n\n    and then open the browser on http://localhost:8080 and accept the certificate\n\n2. enable ingress in the values file `server.ingress.enabled` and either\n      - Add the annotation for ssl passthrough: https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/#option-1-ssl-passthrough\n      - Set the `configs.params.\"server.insecure\"` in the values file and terminate SSL at your ingress: https://argo-cd.readthedocs.io/en/stable/operator-manual/ingress/#option-2-multiple-ingress-objects-and-hosts\n\n\nAfter reaching the UI the first time you can login with username: admin and the random password generated during the installation. You can find the password by running:\n\nkubectl -n argocd get secret argocd-initial-admin-secret -o jsonpath=\"{.data.password}\" | base64 -d\n\n(You should delete the initial secret afterwards as suggested by the Getting Started Guide: https://argo-cd.readthedocs.io/en/stable/getting_started/#4-login-using-the-cli)\n",
                "revision": 22,
                "values": "{\"configs\":{\"cm\":{\"accounts.admin\":\"apiKey\",\"admin.enabled\":true,\"dex.config\":\"connectors:\\n  - type: github\\n    id: github\\n    name: GitHub\\n    config:\\n      clientID: Ov23li7L6oRuONdBgiR1\\n      clientSecret: 1d24290df1f11b29f910bb692344cdea6dad2628\\n      redirectURI: http://localhost:8080/api/dex/callback\\n\",\"url\":\"http://localhost:8080\"},\"params\":{\"server.insecure\":true},\"rbac\":{\"policy.csv\":\"p, role:admin, applications, *, */*, allow\\ng, mogaal, role:admin\\ng, jaacu, role:admin\\ng, eddymdz, role:admin\\ng, pabloberrettoni, role:admin\\ng, ricardocamacho, role:admin\\ng, joseluiscodesk8, role:admin\\n\",\"policy.default\":\"role:readonly\",\"scopes\":\"[groups, preferred_username]\"}}}",
                "version": "8.1.0"
              }
            ],
            "name": "argocd",
            "namespace": "argocd",
            "pass_credentials": false,
            "postrender": [],
            "recreate_pods": false,
            "render_subchart_notes": true,
            "replace": false,
            "repository": "https://argoproj.github.io/argo-helm",
            "repository_ca_file": null,
            "repository_cert_file": null,
            "repository_key_file": null,
            "repository_password": null,
            "repository_username": null,
            "reset_values": false,
            "reuse_values": false,
            "set": [],
            "set_list": [],
            "set_sensitive": [],
            "skip_crds": false,
            "status": "deployed",
            "timeout": 300,
            "upgrade_install": null,
            "values": [
              "configs:\n  params:\n    server.insecure: true\n  \n  cm:\n    admin.enabled: true\n    url: http://localhost:8080\n    accounts.admin: apiKey\n    dex.config: |\n      connectors:\n        - type: github\n          id: github\n          name: GitHub\n          config:\n            clientID: Ov23li7L6oRuONdBgiR1\n            clientSecret: 1d24290df1f11b29f910bb692344cdea6dad2628\n            redirectURI: http://localhost:8080/api/dex/callback\n  \n  rbac:\n    # match by github username using preferred_username\n    scopes: '[groups, preferred_username]'\n    policy.default: 'role:readonly'\n    policy.csv: |\n      p, role:admin, applications, *, */*, allow\n      g, mogaal, role:admin\n      g, jaacu, role:admin\n      g, eddymdz, role:admin\n      g, pabloberrettoni, role:admin\n      g, ricardocamacho, role:admin\n      g, joseluiscodesk8, role:admin\n"
            ],
            "verify": false,
            "version": "8.1.0",
            "wait": true,
            "wait_for_jobs": false
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "repository_password"
              }
            ]
          ],
          "identity_schema_version": 0,
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ==",
          "dependencies": [
            "kubernetes_namespace.argocd"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "kubernetes_namespace",
      "name": "argocd",
      "provider": "provider[\"registry.terraform.io/hashicorp/kubernetes\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "argocd",
            "metadata": [
              {
                "annotations": {},
                "generate_name": "",
                "generation": 0,
                "labels": {},
                "name": "argocd",
                "resource_version": "1466",
                "uid": "6636322e-f536-43a0-96a5-b42738a7d1b6"
              }
            ],
            "timeouts": null,
            "wait_for_default_service_account": false
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiZGVsZXRlIjozMDAwMDAwMDAwMDB9fQ=="
        }
      ]
    }
  ],
  "check_results": null
}
